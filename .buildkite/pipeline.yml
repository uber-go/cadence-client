# `yq 'explode(.)' .buildkite/pipeline.yml` to view expanded anchors/aliases
container:
  kubernetes: &kubernetes
    gitEnvFrom:
      - secretRef:
          name: oss-github-ssh-credentials
    sidecars:
    - image: us-west1-docker.pkg.dev/ci-compute/buildkite-images/buildkite-dind:v1
      volumeMounts:
        - mountPath: /var/run/
          name: docker-sock
      securityContext:
        privileged: true
        allowPrivilegeEscalation: true
    mirrorVolumeMounts: true # CRITICAL: this must be at the same indentation level as sidecars
    podSpec: &podSpec
      containers:
        - &commandContainer
          image: us-west1-docker.pkg.dev/ci-compute/buildkite-images/buildkite-command-container:v2
          command:
          - |-
            echo "Command step was not overridden."
            exit 1
          volumeMounts:
            - mountPath: /var/run/
              name: docker-sock
          resources:
            requests:
              cpu: 7500m
              memory: 28G
      volumes:
      - name: docker-sock
        emptyDir: {}

agents:
  queue: "buildkite-gcp"
steps:
  - label: "fossa analyze"
    command: ".buildkite/scripts/fossa.sh"

  - label: ":golang: unit-test"
    artifact_paths:
      - ".build/*/coverage/*.out"
      - ".build/cover.out"
      - ".build/metadata.txt"
    plugins:
      - kubernetes:
          <<: *kubernetes
          podSpec:
            <<: *podSpec
            containers:
              - <<: *commandContainer
                command:
                - |-
                  git submodule update --init
                  make unit_test
                  .buildkite/scripts/gen_coverage_metadata.sh .build/metadata.txt
      - docker-compose#v3.0.0:
          run: unit-test
          config: docker/buildkite/docker-compose.yml

  - label: ":golangci-lint: validate code is clean"
    artifact_paths: [ ]
    retry:
      automatic:
        limit: 2
    plugins:
      - kubernetes:
          <<: *kubernetes
          podSpec:
            <<: *podSpec
            containers:
              - <<: *commandContainer
                command:
                - |-
                  git submodule update --init
                  ./scripts/golint.sh
      - docker-compose#v3.0.0:
          run: unit-test
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration-test-sticky-off"
    artifact_paths:
      - ".build/*/coverage/*.out"
    retry:
      automatic:
        limit: 2
    plugins:
      - kubernetes:
          <<: *kubernetes
          podSpec:
            <<: *podSpec
            containers:
              - <<: *commandContainer
                command:
                - |-
                  git submodule update --init
                  make integ_test_sticky_off
      - docker-compose#v3.0.0:
          run: integ-test
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration-test-sticky-on"
    artifact_paths:
      - ".build/*/coverage/*.out"
    retry:
      automatic:
        limit: 2
    plugins:
      - kubernetes:
          <<: *kubernetes
          podSpec:
            <<: *podSpec
            containers:
              - <<: *commandContainer
                command:
                - |-
                  git submodule update --init
                  make integ_test_sticky_on
      - docker-compose#v3.0.0:
          run: integ-test
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration-test-grpc-adapter"
    artifact_paths:
      - ".build/*/coverage/*.out"
    retry:
      automatic:
        limit: 2
    plugins:
      - kubernetes:
          <<: *kubernetes
          podSpec:
            <<: *podSpec
            containers:
              - <<: *commandContainer
                command:
                - |-
                  git submodule update --init
                  make integ_test_grpc
      - docker-compose#v3.0.0:
          run: integ-test-grpc
          config: docker/buildkite/docker-compose.yml
